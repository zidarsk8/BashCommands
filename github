############# GITHUB SPECIFIC ############# 

SETUP:
Generate public key: 
    ssh-keygen -t rsa #TYPE-A-PASSWORD

Setup user name, email:
    git config --global user.name "Smotko"
    git config --global user.email "ensmotko@gmail.com"

Account Admin/API Token
    git config --global github.user User
    git config --global github.token c98e6262ab13d58da96389ab41632f7e

NEW REPO:

    mkdir new-project
    cd !$
    git init
    touch README
    git add !$
    git commit -am "Initial commit"
    git remote add origin git@github.com:User/new-project.git
    git push origin master

CLONE REPO:
    mkdir clone-project
    cd !$
    git init
    git remote add origin git@github.com:Smotko/old-project.git
    git pull origin master

############# GIT #############

IGNORE FILES:
    git config --global core.excludesfile ~/.gitignore 
    touch ~/.gitignore

add .ext and ~ to ignore extentions     
    echo "*.ext" >> ~/.gitignore 
    echo "*~" >> ~/.gitignore 

CONFIG FILE
    nano .git/config

this tells git, when we're on branch master, default remote is origin, and we merge the hanges from the master branch
[branch "master"]
    remote = origin
    merge = refs/heads/master


############# USEFULL GIT COMMANDS #############

revert branch one commit 
    git reset --soft HEAD^




############# USING GIT - moving around #############

listing all branches - branches with origin/ prefix are branches on the remote server.
"*" points to your current branch

    git branch -a
    
* master
  zidar
  origin/HEAD
  origin/branch1
  origin/master
  origin/testBranch
  origin/zidar

changing branches (use previous command to see if it worked)

    git checkout zidar
    

changing to remote branches (we cant go to origin/testBranch, since that's a remote branch)
this creates a new local testBranch branch, derived from origin/testBranch

    git checkout -t origin/testBranch

we check to see if ti worked    
    
    git branch -a
    
* testBranch
  master
  zidar
  origin/HEAD
  origin/branch1
  origin/master
  origin/testBranch
  origin/zidar
    

############# USING GIT - fetching pushing pulling and merging #############

to download all remote branches that have been changed, we use
    git fetch

to download just one specific branch from the remote repository 
    git fetch origin zidar

these commands will onlly affect remote branches in the last example "origin/zidar" 


to merge changes done in origin zidar and branch1 we need to move to zidar branch and merge

    git checkout zidar
    git fetch 
    git merge origin/zidar
    git merge origin/branch1

or 

    git checkout zidar
    git pull origin zidar
    git pull origin branch1






